[{"C:\\Fer\\projetos\\React\\todo\\src\\index.tsx":"1","C:\\Fer\\projetos\\React\\todo\\src\\reportWebVitals.ts":"2","C:\\Fer\\projetos\\React\\todo\\src\\Components\\App.tsx":"3","C:\\Fer\\projetos\\React\\todo\\src\\Components\\Navbar.tsx":"4","C:\\Fer\\projetos\\React\\todo\\src\\Components\\TodoList.tsx":"5","C:\\Fer\\projetos\\React\\todo\\src\\components\\App.tsx":"6","C:\\Fer\\projetos\\React\\todo\\src\\components\\TodoList.tsx":"7","C:\\Fer\\projetos\\React\\todo\\src\\components\\Navbar.tsx":"8","C:\\Fer\\projetos\\React\\todo\\src\\components\\TodoListItem.tsx":"9","C:\\Fer\\projetos\\React\\todo\\src\\contexts\\TodoContext.tsx":"10","C:\\Fer\\projetos\\React\\todo\\src\\services\\TodoService.tsx":"11","C:\\Fer\\projetos\\React\\todo\\src\\components\\AddTodo.tsx":"12"},{"size":489,"mtime":1607995739186,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":263,"mtime":1607995693087,"results":"16","hashOfConfig":"14"},{"size":750,"mtime":1607995737721,"results":"17","hashOfConfig":"14"},{"size":166,"mtime":1607995726934,"results":"18","hashOfConfig":"14"},{"size":931,"mtime":1608072591092,"results":"19","hashOfConfig":"14"},{"size":826,"mtime":1608070387091,"results":"20","hashOfConfig":"14"},{"size":806,"mtime":1608072704393,"results":"21","hashOfConfig":"14"},{"size":1354,"mtime":1608070596457,"results":"22","hashOfConfig":"14"},{"size":1488,"mtime":1608071928376,"results":"23","hashOfConfig":"14"},{"size":442,"mtime":1608070852370,"results":"24","hashOfConfig":"14"},{"size":1603,"mtime":1608074153491,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wsb6j3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Fer\\projetos\\React\\todo\\src\\index.tsx",[],["52","53"],"C:\\Fer\\projetos\\React\\todo\\src\\reportWebVitals.ts",[],"C:\\Fer\\projetos\\React\\todo\\src\\Components\\App.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\Components\\Navbar.tsx",["54","55"],"C:\\Fer\\projetos\\React\\todo\\src\\Components\\TodoList.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\components\\App.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\components\\TodoList.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\components\\Navbar.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\components\\TodoListItem.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\contexts\\TodoContext.tsx",["56"],"import { title } from 'process';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport { Todo } from '../models/Todo';\r\nimport { get, save } from '../services/TodoService';\r\nimport { TodoContextType } from './TodoContextType';\r\n\r\nexport const TodoContext = createContext<TodoContextType>({\r\n    todos: [\r\n        { id:1, title: 'Ir ao supermercado', done: true },\r\n        { id:2, title: 'Ir a academia', done: false }\r\n    ],\r\n    addTodo: () => {},\r\n    removeTodo: () => {},\r\n    toggle: () => {}\r\n});\r\n\r\nconst TodoProvider = (props: any) => {\r\n    const [ todos, setTodos ] = useState<Todo[]>(get);\r\n    \r\n    useEffect(() => {\r\n        save(todos);\r\n    }, [todos]);\r\n\r\n    const addTodo = (title: string) => {\r\n        const todo: Todo = { id: todos.length + 1, title: title, done: false };\r\n        \r\n        // let newTodos = todos;\r\n        // newTodos.push(todo);\r\n        // setTodos(newTodos);\r\n\r\n        setTodos([...todos, todo]);\r\n    };\r\n\r\n    const removeTodo = (todo: Todo) => {\r\n        const index = todos.indexOf(todo);\r\n        setTodos(todos.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const toggle = (todo: Todo) => {\r\n        const index = todos.indexOf(todo);\r\n        todos[index].done = !todo.done;\r\n        setTodos([...todos]);\r\n    };\r\n\r\n    return(\r\n        <TodoContext.Provider value={{todos, addTodo, removeTodo, toggle}}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TodoProvider;","C:\\Fer\\projetos\\React\\todo\\src\\services\\TodoService.tsx",[],"C:\\Fer\\projetos\\React\\todo\\src\\components\\AddTodo.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":21,"nodeType":"63","endLine":9,"endColumn":68},{"ruleId":"61","severity":1,"message":"62","line":15,"column":29,"nodeType":"63","endLine":15,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":15},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'title' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]